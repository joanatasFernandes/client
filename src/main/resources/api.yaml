openapi: 3.0.3
info:
  title: Client API
  description: Client API
  contact:
    email: email
  version: 1.0.0

paths:
  /authenticate:
    post:
      tags:
        - Authenticate
      summary: Authenticate resource
      description: Authenticate resource
      operationId: authenticate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthRequestDto'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticateResponseDto'
        '403':
          description: Authentication failed

  /clients:
    post:
      tags:
        - Client
      summary: Register a new client
      description: Register a new client
      operationId: createClient
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Client'
      responses:
        '201':
          description: Client successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
    get:
      tags:
        - Client
      summary: List all clients
      description: List all clients ordered by name
      operationId: getAllClientsOrderedByName
      responses:
        '200':
          description: List of clients
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Client'

  /clients/{id}:
    put:
      tags:
        - Client
      summary: Update a client
      description: Update a client
      operationId: updateClient
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Client'
        required: true
      responses:
        '200':
          description: Client successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'

    delete:
      tags:
        - Client
      summary: Delete a client
      description: Delete a client
      operationId: deleteClient
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Client successfully deleted

  /clients/state/{state}:
    get:
      tags:
        - Client
      summary: List clients by state
      description: List clients by state
      operationId: getClientsByState
      parameters:
        - name: state
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of clients by state
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Client'

components:
  schemas:
    AuthenticateResponseDto:
      type: object
      properties:
        jwt:
          type: string
          example: eyJhbGciOi

    AuthRequestDto:
      required:
        - username
        - password
      type: object
      properties:
        username:
          type: string
          example: theUser
        password:
          type: string
          example: '12345'
    Client:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        email:
          type: string
          format: email
        address:
          $ref: '#/components/schemas/Address'
        createdBy:
          type: string
        modifiedBy:
          type: string
        creationDate:
          type: string
          format: date-time

    Address:
      type: object
      properties:
        id:
          type: integer
          format: int64
        street:
          type: string
        city:
          type: string
        state:
          type: string
